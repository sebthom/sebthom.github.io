# https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions
name: Renew Certificate

on:
  schedule:
    # https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows
    - cron: '23 15 * * *'
  workflow_dispatch:
    # https://github.blog/changelog/2020-07-06-github-actions-manual-triggers-with-workflow_dispatch/
    inputs:
      force_renewal:
        description: "Force certificate renewal"
        required: false
        default: false
        type: boolean
      force_secret_update:
        description: "Force updating of the GHA secrets."
        required: false
        default: false
        type: boolean
      debug-with-ssh:
        description: "Start an SSH session for debugging purposes after tests ran:"
        default: never
        type: choice
        options: [ always, on_failure, on_failure_or_cancelled, never ]
      debug-with-ssh-only-for-actor:
        description: "Limit access to the SSH session to the GitHub user that triggered the job."
        default: true
        type: boolean

defaults:
  run:
    shell: bash

jobs:

  renew_cert:
    runs-on: ubuntu-latest
    steps:
    - name: Show environment variables
      run: env | sort

    - name: Git Checkout
      uses: actions/checkout@v3 #https://github.com/actions/checkout
      with:
        # https://stackoverflow.com/a/70822562/5116073
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
        fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.

    - name: Configure fast APT repository mirror
      if: env.ACT
      uses: vegardit/fast-apt-mirror.sh@v1

    - name: "Install: GitHub command line client"
      if: env.ACT
      run: |
        set -euo pipefail
        sudo curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg -o /usr/share/keyrings/githubcli-archive-keyring.gpg
        sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list >/dev/null
        sudo apt-get update
        sudo apt-get install -y gh -y
        gh --version

    - name: Renew certificate
      env:
        CERTDB: ${{ secrets.CERTDB }}
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        set -euo pipefail

        CERT_USE_TEST_CA=$( [[ ${ACT:-} == "true" ]] && echo "true" || echo "false")

        CERTDB_IN_TGZ=certdb.tar.gz
        CERTDB_OUT_TGZ=certdb_updated.tar.gz

        echo "$CERTDB" | base64 --decode > $CERTDB_IN_TGZ

        (set -x; docker run --rm \
          -v "$PWD:/workdir" \
          --entrypoint /bin/sh \
          -w /workdir \
          -e CERTDB_IN_TGZ=$CERTDB_IN_TGZ \
          -e CERTDB_OUT_TGZ=$CERTDB_OUT_TGZ \
          -e CERT_USE_TEST_CA=$CERT_USE_TEST_CA \
          -e CERT_FORCE_RENEWAL="${{ inputs.force_renewal }}" \
          -e CERTBOT_OPTIONS=-v \
          -e GH_TOKEN=$GH_TOKEN \
          -e GITHUB_REF_NAME=$GITHUB_REF_NAME \
          certbot/certbot:latest \
          gen_cert.sh)

        if [[ "${{ inputs.force_secret_update }}" == "true" && ! -f $CERTDB_OUT_TGZ ]]; then
          cp $CERTDB_IN_TGZ $CERTDB_OUT_TGZ
        fi

        if [[ -f $CERTDB_OUT_TGZ ]]; then
          echo "Updating secrets..."

          #gh repo list --no-archived --json name,isFork,repositoryTopics
          eclipse_plugin_repos=$(gh repo list --no-archived \
            --json "name,isFork,repositoryTopics" \
            --jq ".[] | select((.isFork == false) and (.repositoryTopics[]?.name == \"eclipse-plugin\")) | .name" \
          )

          base64 -w 0 $CERTDB_OUT_TGZ >${CERTDB_OUT_TGZ}.base64

          for repo in sebthom.github.io $eclipse_plugin_repos; do
            if [[ ${CERT_USE_TEST_CA:-} == "true" ]]; then
              echo "DRY_RUN: secret set -R sebthom/$repo CERTDB"
            else 
              (set -x; gh secret set -R sebthom/$repo CERTDB < ${CERTDB_OUT_TGZ}.base64)
            fi
          done
        fi


    ##################################################
    # Setup SSH debug session
    ##################################################
    - name: "SSH session for debugging: check"
      id: DEBUG_SSH_SESSSION_CHECK
      if: always()
      shell: bash
      run: |
        set -eu
        job_filter_pattern="${{ inputs.debug-with-ssh-only-jobs-matching }}"
        echo "job_filter: $job_filter_pattern"

        job_info=$(echo "$GITHUB_JOB ${{ runner.os }} haxe-${{ matrix.haxe-version }}" | tr -d '\n')
        echo "job_info: $job_info"

        if [[ "$job_info" =~ .*$job_filter_pattern.* ]] && case "${{ job.status }}" in
           success)   [[ "${{ inputs.debug-with-ssh }}" == always ]] ;;
           cancelled) [[ "${{ inputs.debug-with-ssh }}" == on_failure_or_cancelled ]] ;;
           failure)   [[ "${{ inputs.debug-with-ssh }}" =~ on_failure.* ]] ;;
        esac; then
           echo "start_session=true" | tee -a "$GITHUB_OUTPUT"
        fi

    - name: "SSH session for debugging: start"
      uses: mxschmitt/action-tmate@v3 # https://github.com/mxschmitt/action-tmate
      if: always() && steps.DEBUG_SSH_SESSSION_CHECK.outputs.start_session
      with:
        limit-access-to-actor: ${{ inputs.debug-with-ssh-only-for-actor }}
